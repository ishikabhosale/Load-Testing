{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"H:\\\\Flask-Security-Website-master\\\\react-flask-app\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Modal, Card, Container, Button } from 'react-bootstrap';\n\nconst Home = props => {\n  _s();\n\n  const history = useHistory();\n  const [tests, setTests] = useState([]);\n  const [show3, setShow3] = useState(false);\n  const [input, setInput] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getTests();\n  }, []);\n\n  const getTests = async () => {\n    const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/account`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Token ${localStorage.getItem('token')}`\n      }\n    });\n\n    if (resp.ok) {\n      const data = await resp.json();\n      setTests(data.tests);\n    }\n  };\n\n  if (loading === true) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      height: '90vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Predator Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date Created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Run the test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Latest Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tests.map((test, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => history.push('/tests/' + test.predator_id),\n              children: test.predator_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.date_posted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => history.push('/tests/' + test.predator_id + '/' + test.report_id),\n              children: test.last_success_rate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 8\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"lpDoWy9F4KTHwQGHNGkubnxvOqM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["H:/Flask-Security-Website-master/react-flask-app/src/pages/Home.js"],"names":["React","useState","useEffect","useHistory","Row","Col","Modal","Card","Container","Button","Home","props","history","tests","setTests","show3","setShow3","input","setInput","loading","setLoading","getTests","resp","fetch","process","env","REACT_APP_API_ENDPOINT","headers","Authorization","localStorage","getItem","ok","data","json","height","map","test","index","push","predator_id","date_posted","report_id","last_success_rate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Modal, Card, Container , Button} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n    const history = useHistory()\r\n    const [tests, setTests] = useState([])\r\n    const [show3, setShow3] = useState(false);\r\n    const [input, setInput] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        getTests();\r\n    }, [])\r\n\r\n   \r\n    const getTests = async () => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/account`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Token ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n            const data = await resp.json()\r\n            setTests(data.tests)\r\n        }\r\n    }\r\n\r\n    \r\n    if (loading === true) return <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '90vh' }}>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n    return (\r\n        <>\r\n            <Container>\r\n            <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Predator Id</th>\r\n      <th>Date Created</th>\r\n      <th>Run the test</th>\r\n      <th>Latest Report</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {tests.map((test, index) =>(\r\n       <tr key={index}>\r\n       <td>{index +1 }</td>\r\n       <td onClick={() => history.push('/tests/' + test.predator_id )}>{test.predator_id}</td>\r\n       <td>{test.date_posted}</td>\r\n       <td>Run</td>\r\n       <td onClick={() => history.push('/tests/' + test.predator_id + '/' + test.report_id)}>{test.last_success_rate}</td>\r\n     </tr>\r\n  ))}\r\n  </tbody>\r\n</Table>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}