{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"H:\\\\Flask-Security-Website-master\\\\react-flask-app\\\\src\\\\pages\\\\EachReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { Row, Col, Modal, Card, Container, Button } from 'react-bootstrap';\n\nconst EachReport = props => {\n  _s();\n\n  const params = useParams();\n  const history = useHistory();\n  const [report, setReport] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    reportPage(params['test_id'], params['report_id']);\n  }, []);\n\n  const reportPage = async (test_id, report_id) => {\n    const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/tests/${test_id}/${report_id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Token ${localStorage.getItem('token')}`\n      }\n    });\n\n    if (resp.ok) {\n      const data = await resp.json();\n\n      if (data.success) {\n        setReport(data.report);\n      }\n    }\n  };\n\n  if (loading === true) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      height: '90vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Report Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Re-Run the Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Report success rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: report.map((repor, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => history.push('/tests/' + params['id'] + '/' + test.report_id),\n              children: test.report_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: test.date_posted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => history.push('/tests/' + test.predator_id + '/' + test.report_id),\n              children: test.last_success_rate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 8\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(EachReport, \"OfktJbi+/ZM5iLQKjswCvl8pdiE=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EachReport;\nexport default EachReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachReport\");","map":{"version":3,"sources":["H:/Flask-Security-Website-master/react-flask-app/src/pages/EachReport.js"],"names":["React","useState","useEffect","useHistory","useParams","Row","Col","Modal","Card","Container","Button","EachReport","props","params","history","report","setReport","loading","setLoading","reportPage","test_id","report_id","resp","fetch","process","env","REACT_APP_API_ENDPOINT","headers","Authorization","localStorage","getItem","ok","data","json","success","height","map","repor","index","push","test","date_posted","predator_id","last_success_rate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,SAAhC,EAA4CC,MAA5C,QAAyD,iBAAzD;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CAACN,MAAM,CAAC,SAAD,CAAP,EAAoBA,MAAM,CAAC,WAAD,CAA1B,CAAV;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,UAAU,GAAG,OAAOC,OAAP,EAAgBC,SAAhB,KAA+B;AAC9C,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,UAASN,OAAQ,IAAGC,SAAU,EAArE,EAAwE;AAC5FM,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,SAAQC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAFjD;AADmF,KAAxE,CAAxB;;AAMA,QAAIR,IAAI,CAACS,EAAT,EAAa;AACT,YAAMC,IAAI,GAAG,MAAMV,IAAI,CAACW,IAAL,EAAnB;;AACA,UAAID,IAAI,CAACE,OAAT,EAAkB;AACdlB,QAAAA,SAAS,CAACgB,IAAI,CAACjB,MAAN,CAAT;AACH;AACJ;AACJ,GAbD;;AAkBA,MAAIE,OAAO,KAAK,IAAhB,EAAsB,oBAAO;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAkE,IAAA,KAAK,EAAE;AAAEkB,MAAAA,MAAM,EAAE;AAAV,KAAzE;AAAA,2BAC7B;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAD6B;AAAA;AAAA;AAAA;AAAA,UAAP;AAKtB,sBACI;AAAA,2BACI,QAAC,SAAD;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAAA,gCACV;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADU,eAUV;AAAA,oBACCpB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACP;AAAA,oCACA;AAAA,wBAAKA,KAAK,GAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAI,cAAA,OAAO,EAAE,MAAMxB,OAAO,CAACyB,IAAR,CAAa,YAAY1B,MAAM,CAAC,IAAD,CAAlB,GAA2B,GAA3B,GAAiC2B,IAAI,CAACnB,SAAnD,CAAnB;AAAA,wBAAoFmB,IAAI,CAACnB;AAAzF;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,wBAAKmB,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAI,cAAA,OAAO,EAAE,MAAM3B,OAAO,CAACyB,IAAR,CAAa,YAAYC,IAAI,CAACE,WAAjB,GAA+B,GAA/B,GAAqCF,IAAI,CAACnB,SAAvD,CAAnB;AAAA,wBAAuFmB,IAAI,CAACG;AAA5F;AAAA;AAAA;AAAA;AAAA,oBALA;AAAA,aAASL,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AADD;AAAA;AAAA;AAAA;AAAA,gBAVU;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6BH,CAhED;;GAAM3B,U;UACaP,S,EACCD,U;;;KAFdQ,U;AAkEN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Row, Col, Modal, Card, Container , Button} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst EachReport = (props) => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [report, setReport] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        reportPage(params['test_id'], params['report_id'])\r\n    }, [])\r\n\r\n    const reportPage = async (test_id, report_id ) => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/tests/${test_id}/${report_id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Token ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n            const data = await resp.json()\r\n            if (data.success) {\r\n                setReport(data.report)\r\n            }\r\n        }\r\n    }\r\n    \r\n   \r\n\r\n    \r\n    if (loading === true) return <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '90vh' }}>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n    return (\r\n        <>\r\n            <Container>\r\n            <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Report Id</th>\r\n      <th>Last Updated</th>\r\n      <th>Re-Run the Test</th>\r\n      <th>Report success rate</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {report.map((repor, index) =>(\r\n       <tr key={index}>\r\n       <td>{index +1 }</td>\r\n       <td onClick={() => history.push('/tests/' + params['id'] + '/' + test.report_id )}>{test.report_id}</td>\r\n       <td>{test.date_posted}</td>\r\n       <td>Run</td>\r\n       <td onClick={() => history.push('/tests/' + test.predator_id + '/' + test.report_id)}>{test.last_success_rate}</td>\r\n     </tr>\r\n  ))}\r\n  </tbody>\r\n</Table>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EachReport"]},"metadata":{},"sourceType":"module"}