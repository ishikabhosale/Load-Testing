[{"H:\\Flask-Security-Website-master\\react-flask-app\\src\\index.js":"1","H:\\Flask-Security-Website-master\\react-flask-app\\src\\App.js":"2","H:\\Flask-Security-Website-master\\react-flask-app\\src\\reportWebVitals.js":"3","H:\\Flask-Security-Website-master\\react-flask-app\\src\\organis.js":"4","H:\\Flask-Security-Website-master\\react-flask-app\\src\\components\\Footer.js":"5","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\Reports.js":"6","H:\\Flask-Security-Website-master\\react-flask-app\\src\\components\\Navbar.js":"7","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\SignIn.js":"8","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\EachReport.js":"9","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\Home.js":"10","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\Admin.js":"11","H:\\Flask-Security-Website-master\\react-flask-app\\src\\components\\AddUser.js":"12"},{"size":574,"mtime":1609317415270,"results":"13","hashOfConfig":"14"},{"size":223,"mtime":1608575378539,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608288422880,"results":"16","hashOfConfig":"14"},{"size":3188,"mtime":1609318204770,"results":"17","hashOfConfig":"14"},{"size":471,"mtime":1609153480601,"results":"18","hashOfConfig":"14"},{"size":2123,"mtime":1609567985031,"results":"19","hashOfConfig":"14"},{"size":1953,"mtime":1609331773726,"results":"20","hashOfConfig":"14"},{"size":2166,"mtime":1609391638500,"results":"21","hashOfConfig":"14"},{"size":2117,"mtime":1609065603900,"results":"22","hashOfConfig":"14"},{"size":2012,"mtime":1609567945517,"results":"23","hashOfConfig":"14"},{"size":3419,"mtime":1609333627426,"results":"24","hashOfConfig":"14"},{"size":1434,"mtime":1609331747005,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1aebt2o",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"H:\\Flask-Security-Website-master\\react-flask-app\\src\\index.js",[],["60","61"],"H:\\Flask-Security-Website-master\\react-flask-app\\src\\App.js",[],"H:\\Flask-Security-Website-master\\react-flask-app\\src\\reportWebVitals.js",[],"H:\\Flask-Security-Website-master\\react-flask-app\\src\\organis.js",["62","63"],"import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, useHistory } from 'react-router-dom'\r\nimport Navi from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport Home from './pages/Home';\r\nimport Reports from './pages/Reports'\r\nimport EachReport from './pages/EachReport'\r\nimport SignIn from './pages/SignIn';\r\nimport Admin from './pages/Admin'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\nconst Organis = () => {\r\n  const [user, setUser] = useState(null)\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(true)\r\n    \r\n\r\n  useEffect(() => {\r\n    getUserInfo();\r\n    window.history.replaceState({}, document.title, window.location.pathname);\r\n  }, [])\r\n\r\n  \r\n\r\n  const doLogOut = async () => {\r\n    const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/signout`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Token ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n    if (resp.ok) {\r\n      const data = await resp.json()\r\n      if (data.success) {\r\n        localStorage.clear('token')\r\n        setUser(null)\r\n      }\r\n    history.push(\"/\")\r\n    }\r\n  }\r\n\r\n  const getUserInfo = (async) => {\r\n    const existingToken = localStorage.getItem(\"token\");\r\n    console.log(existingToken)\r\n    axios.get(`${process.env.REACT_APP_API_ENDPOINT}/api/getCurrentUser`,{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Token ${existingToken}`\r\n        }\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        localStorage.setItem(\"token\", existingToken)\r\n        setUser(res.data.user);\r\n        setLoading(false)\r\n     })\r\n     .catch((err) =>{\r\n       console.log(err)\r\n       setLoading(false)\r\n       localStorage.clear(\"token\")\r\n     } );  \r\n }\r\n\r\n\r\n  if (loading === true) return <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '90vh' }}>\r\n  <div className=\"spinner-border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n  </div>\r\n  </div> \r\n  \r\n  if (!user) {\r\n    return (\r\n      <div className=\"logindiv\" >\r\n        <Row style={{ height: '100vh',}}>\r\n          <Col xs={{span: 10 }} md={{span:8 }} lg={{span:6 }} className=\"login \" >\r\n            <SignIn\r\n              user={user}\r\n              setUser={setUser}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navi\r\n        user={user}\r\n        doLogOut={doLogOut}\r\n      />\r\n      <Switch>\r\n        <Route exact path='/' render={() => <Home \r\n        user={user} />} \r\n        />\r\n\r\n        <Route exact path='/admin' render={() => <Admin\r\n        user={user} />} \r\n        />\r\n\r\n        <Route path = \"/tests/:id\" render={(testsPage={testsPage}) => <Reports \r\n        user={user}\r\n        {...testsPage} />} />\r\n\r\n        <Route path = '/tests/:test_id/:report_id' render={(reportPage = {reportPage}) => <EachReport \r\n        user={user}\r\n        />} \r\n\r\n        \r\n        />\r\n\r\n       \r\n        \r\n      </Switch>    \r\n      <Footer />\r\n      \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Organis","H:\\Flask-Security-Website-master\\react-flask-app\\src\\components\\Footer.js",[],"H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\Reports.js",["64","65","66","67","68","69"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Row, Col, Modal, Card, Container , Button, Table} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Reports = (props) => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [reports, setReports] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        testsPage(params['id'])\r\n    }, [])\r\n\r\n    const testsPage = async (id) => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/tests/${id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Token ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n            const data = await resp.json()\r\n            if (data.success) {\r\n                setReports(data.reports)\r\n                setLoading(false)\r\n            }\r\n        }\r\n    }\r\n    \r\n   \r\n\r\n    \r\n    if (loading === true) return <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '90vh' }}>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1>Jobs</h1>\r\n            <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Report Id</th>\r\n      <th>Last Updated</th>\r\n      <th>Re-Run the Test</th>\r\n      <th>Report success rate</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {reports.map((report, index) =>(\r\n       <tr key={index}>\r\n       <td>{index +1 }</td>\r\n       <td onClick={() => history.push('/tests/' + params['id'] + '/' + report.report_id )}>{report.report_id}</td>\r\n       <td>{report.last_updated_at}</td>\r\n       <td>Run</td>\r\n       <td onClick={() => history.push('/tests/' + params['id'] + '/' + test.report_id)}>{report.last_success_rate}</td>\r\n     </tr>\r\n  ))}\r\n  </tbody>\r\n</Table>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Reports","H:\\Flask-Security-Website-master\\react-flask-app\\src\\components\\Navbar.js",["70","71"],"import React from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { FaHome, FaPlusCircle, FaUserCircle } from 'react-icons/fa';\r\n\r\n\r\n\r\nconst Navi = (props) => {\r\n    // const k = window.location.pathname\r\n    // const pId = window.location.pathname.split(\"/project/\")[1]\r\n    // console.log('===========', pId)\r\n    // WORK FROM HERE I HAVE THE ID OF A PROJECT FOR CREATING TASKS IN NAVBAR BUT NEED TO GUARD AGAINST null OR inocrrect ID\r\n\r\n    return (\r\n        <>\r\n            <Navbar md={12} className='navbar align-middle' expand=\"lg\"  >\r\n                <Navbar.Brand href=\"/\">\r\n                Logo</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav>\r\n                    <Nav.Link className=\" ml-5\" href=\"/\">Hi, {props.user.name}</Nav.Link>\r\n                    <Nav.Link className=\" ml-5\" href=\"/\"><FaHome /></Nav.Link>\r\n                    <NavDropdown className=\" ml-5 mr-5\" title={\r\n                        <span><FaUserCircle /> </span>\r\n                    } id=\"basic-nav-dropdown\" >\r\n                        <NavDropdown.Item href=\"/mytasks\">My Tasks</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/allprojects\">All Projects</NavDropdown.Item>\r\n                        {\r\n                            props.user.email == \"admin@gmail.com\" && <NavDropdown.Item href= \"/admin\">Admin DashBoard</NavDropdown.Item>\r\n                        }\r\n                        {/* <NavDropdown.Item href=\"#action/3.3\">This Week</NavDropdown.Item> */}\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={() => props.doLogOut(props.user.user_id)} >Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar >\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navi","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\SignIn.js",["72","73"],"import React , {useState} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst SignIn = (props) => {\r\n    const [user, setUser] = useState({})\r\n\r\n    const [input,setInput] = useState({})\r\n    const handleOnChange = (e) => {\r\n        setInput({ ...input,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const login = async(e)=>{\r\n        e.preventDefault()\r\n        console.log(input.email)\r\n        var postData = {\r\n            email: input.email,\r\n            password : input.password\r\n        };\r\n        axios.post(`${process.env.REACT_APP_API_ENDPOINT}/api/signin`,postData, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            }\r\n          })\r\n          .then((res) => {\r\n            localStorage.setItem('token', res.data.token)\r\n            setUser(res.data.user)\r\n            window.location.replace('/')\r\n          })\r\n          .catch((error) => {\r\n        console.error(error)\r\n      })\r\n    {/* \r\n        const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/signin` ,{\r\n            method:\"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(input)\r\n        });\r\n        const data = await res.json()\r\n        if (data.success){\r\n            localStorage.setItem('token', data.token)\r\n            setUser(data.user)\r\n            window.location.replace('/')\r\n        }\r\n        */}\r\n    }\r\n\r\n    return (\r\n<Form className=\"signin-form\" onChange={e=>handleOnChange(e)} onSubmit={(e)=>login(e)}>\r\n    \r\n    <h1>Login</h1>\r\n     <br/>\r\n    <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" />\r\n    </Form.Group>\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n    </Form.Group>\r\n    <Button block size=\"lg\" variant=\"success\" type=\"submit\">\r\n        Login\r\n    </Button>\r\n    {/* <Button block size=\"lg\" variant=\"primary\" href='/register' >Register</Button> */}\r\n    \r\n</Form>\r\n    )\r\n}\r\nexport default SignIn","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\EachReport.js",["74","75","76","77","78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Row, Col, Modal, Card, Container , Button, Table} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst EachReport = (props) => {\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    const [report, setReport] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        reportPage(params['test_id'], params['report_id'])\r\n    }, [])\r\n\r\n    const reportPage = async (test_id, report_id ) => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/tests/${test_id}/${report_id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Token ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n            const data = await resp.json()\r\n            if (data.success) {\r\n                setReport(data.report)\r\n            }\r\n        }\r\n    }\r\n    \r\n   \r\n\r\n    \r\n    if (loading === true) return <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '90vh' }}>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n    return (\r\n        <>\r\n            <Container>\r\n            <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Report Id</th>\r\n      <th>Last Updated</th>\r\n      <th>Re-Run the Test</th>\r\n      <th>Report success rate</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {report.map((repor, index) =>(\r\n       <tr key={index}>\r\n       <td>{index +1 }</td>\r\n       <td onClick={() => history.push('/tests/' + params['id'] + '/' + test.report_id )}>{test.report_id}</td>\r\n       <td>{test.date_posted}</td>\r\n       <td>Run</td>\r\n       <td onClick={() => history.push('/tests/' + test.predator_id + '/' + test.report_id)}>{test.last_success_rate}</td>\r\n     </tr>\r\n  ))}\r\n  </tbody>\r\n</Table>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EachReport","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\Home.js",["81","82","83","84","85","86","87","88","89"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Modal, Card, Container , Button, Table} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n    const history = useHistory()\r\n    const [tests, setTests] = useState([])\r\n    const [show3, setShow3] = useState(false);\r\n    const [input, setInput] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        getTests();\r\n    }, [])\r\n\r\n   \r\n    const getTests = async () => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/account`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Token ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n            const data = await resp.json()\r\n            setTests(data.tests)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    \r\n    if (loading === true) return <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '90vh' }}>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1>Tests</h1>\r\n            <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Predator Id</th>\r\n      <th>Date Created</th>\r\n      <th>Run the test</th>\r\n      <th>Latest Report</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {tests.map((test, index) =>(\r\n       <tr key={index}>\r\n       <td>{index +1 }</td>\r\n       <td onClick={() => history.push('/tests/' + test.predator_id )}>{test.predator_id}</td>\r\n       <td>{test.date_posted}</td>\r\n       <td>Run</td>\r\n       <td onClick={() => history.push('/tests/' + test.predator_id + '/' + test.report_id)}>{test.last_success_rate}</td>\r\n     </tr>\r\n  ))}\r\n  </tbody>\r\n</Table>\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home","H:\\Flask-Security-Website-master\\react-flask-app\\src\\pages\\Admin.js",["90","91","92","93","94","95"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Row, Col, Modal, Card, Container , Button, Table, Tab, Tabs} from 'react-bootstrap';\r\nimport AddUser from \"../components/AddUser\"\r\n\r\n\r\n\r\nconst Admin = (props) => {\r\n    const history = useHistory()\r\n    const [users, setUsers] = useState([])\r\n    const [tests, setTests] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        adminPage()\r\n    }, [])\r\n\r\n    const adminPage = async () => {\r\n        const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/admin`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Token ${localStorage.getItem('token')}`\r\n            }\r\n        })\r\n        if (resp.ok) {\r\n            const data = await resp.json()\r\n            if (data.success) {\r\n                setUsers(data.all_users)\r\n                setTests(data.all_tests)\r\n                setLoading(false)\r\n            }\r\n        }\r\n    }\r\n    \r\n   \r\n\r\n    \r\n    if (loading === true) return <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '90vh' }}>\r\n    <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n    return (\r\n        <>\r\n            <Container>\r\n            <Tabs defaultActiveKey=\"users\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"users\" title=\"Users\">\r\n                <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {users.map((user, index) =>(\r\n                    <tr key={index}>\r\n                    <td>{index +1 }</td>\r\n                    <td>{user.username}</td>\r\n                    <td>{user.email}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n                </Tab>\r\n                <Tab eventKey=\"tests\" title=\"All Tests\" label = \"Blas lbals\">\r\n                <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>Predator Id</th>\r\n                    <th>Date Created</th>\r\n                    <th>Run the test</th>\r\n                    <th>Latest Report</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {tests.map((test, index) =>(\r\n                    <tr key={index}>\r\n                    <td>{index +1 }</td>\r\n                    <td onClick={() => history.push('/tests/' + test.id )}>{test.id}</td>\r\n                    <td>{test.updated_at}</td>\r\n                    <td>Run</td>\r\n                    <td onClick={() => history.push('/tests/' + test.predator_id + '/' + test.report_id)}>{test.last_success_rate}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n                </Tab>\r\n                <Tab eventKey=\"createUsers\" title=\"Create Users\">\r\n                    <AddUser/>\r\n                </Tab>\r\n            </Tabs>\r\n            \r\n            </Container>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Admin","H:\\Flask-Security-Website-master\\react-flask-app\\src\\components\\AddUser.js",["96","97"],"import React, {useState} from 'react';\r\nimport { Row, Col, Form, Button} from 'react-bootstrap';\r\n\r\n\r\nconst AddUser = (props) => {\r\n    // [props.user, props.setUser] = useState({})\r\n    const [input,setInput] = useState({})\r\n    const handleOnChange = (e) => {\r\n        setInput({ ...input,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const newUser = async (e) => {\r\n        e.preventDefault()\r\n        const resp = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/admin`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Token ${localStorage.getItem('token')}`\r\n        },\r\n          body: JSON.stringify(input)\r\n        })\r\n        \r\n        const data = await resp.json()\r\n        if (data.success) {\r\n            window.location.replace('/admin')\r\n        }\r\n      }\r\n\r\n\r\n    return (\r\n<Form className=\"signin-form\" onChange={(e) => handleOnChange(e)}  onSubmit={(e) => newUser(e)}>\r\n    <h1>Register</h1>\r\n   \r\n    <Form.Group controlId=\"formFirstName\">\r\n        <Form.Control name=\"name\" type=\"name\" placeholder=\"Name\" />\r\n    </Form.Group>\r\n    <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" />\r\n    </Form.Group>\r\n    <Button block size=\"lg\" variant=\"success\"type=\"submit\">\r\n        Register\r\n    </Button>\r\n</Form>\r\n    )\r\n}\r\nexport default AddUser",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":103,"column":56,"nodeType":"106","messageId":"107","endLine":103,"endColumn":65},{"ruleId":"104","severity":1,"message":"108","line":107,"column":75,"nodeType":"106","messageId":"107","endLine":107,"endColumn":85},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"106","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"109","severity":1,"message":"112","line":4,"column":15,"nodeType":"106","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":4,"column":20,"nodeType":"106","messageId":"111","endLine":4,"endColumn":25},{"ruleId":"109","severity":1,"message":"114","line":4,"column":27,"nodeType":"106","messageId":"111","endLine":4,"endColumn":31},{"ruleId":"109","severity":1,"message":"115","line":4,"column":45,"nodeType":"106","messageId":"111","endLine":4,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":17,"column":8,"nodeType":"118","endLine":17,"endColumn":10,"suggestions":"119"},{"ruleId":"109","severity":1,"message":"120","line":3,"column":18,"nodeType":"106","messageId":"111","endLine":3,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":29,"column":46,"nodeType":"123","messageId":"124","endLine":29,"endColumn":48},{"ruleId":"109","severity":1,"message":"125","line":6,"column":12,"nodeType":"106","messageId":"111","endLine":6,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":35,"column":5,"nodeType":"128","messageId":"129","endLine":49,"endColumn":12},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"106","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"109","severity":1,"message":"112","line":4,"column":15,"nodeType":"106","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":4,"column":20,"nodeType":"106","messageId":"111","endLine":4,"endColumn":25},{"ruleId":"109","severity":1,"message":"114","line":4,"column":27,"nodeType":"106","messageId":"111","endLine":4,"endColumn":31},{"ruleId":"109","severity":1,"message":"115","line":4,"column":45,"nodeType":"106","messageId":"111","endLine":4,"endColumn":51},{"ruleId":"109","severity":1,"message":"130","line":12,"column":21,"nodeType":"106","messageId":"111","endLine":12,"endColumn":31},{"ruleId":"116","severity":1,"message":"117","line":18,"column":8,"nodeType":"118","endLine":18,"endColumn":10,"suggestions":"131"},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"106","messageId":"111","endLine":3,"endColumn":13},{"ruleId":"109","severity":1,"message":"112","line":3,"column":15,"nodeType":"106","messageId":"111","endLine":3,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":3,"column":20,"nodeType":"106","messageId":"111","endLine":3,"endColumn":25},{"ruleId":"109","severity":1,"message":"114","line":3,"column":27,"nodeType":"106","messageId":"111","endLine":3,"endColumn":31},{"ruleId":"109","severity":1,"message":"115","line":3,"column":45,"nodeType":"106","messageId":"111","endLine":3,"endColumn":51},{"ruleId":"109","severity":1,"message":"132","line":10,"column":12,"nodeType":"106","messageId":"111","endLine":10,"endColumn":17},{"ruleId":"109","severity":1,"message":"133","line":10,"column":19,"nodeType":"106","messageId":"111","endLine":10,"endColumn":27},{"ruleId":"109","severity":1,"message":"134","line":11,"column":12,"nodeType":"106","messageId":"111","endLine":11,"endColumn":17},{"ruleId":"109","severity":1,"message":"135","line":11,"column":19,"nodeType":"106","messageId":"111","endLine":11,"endColumn":27},{"ruleId":"109","severity":1,"message":"136","line":3,"column":10,"nodeType":"106","messageId":"111","endLine":3,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"106","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"109","severity":1,"message":"112","line":4,"column":15,"nodeType":"106","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":4,"column":20,"nodeType":"106","messageId":"111","endLine":4,"endColumn":25},{"ruleId":"109","severity":1,"message":"114","line":4,"column":27,"nodeType":"106","messageId":"111","endLine":4,"endColumn":31},{"ruleId":"109","severity":1,"message":"115","line":4,"column":45,"nodeType":"106","messageId":"111","endLine":4,"endColumn":51},{"ruleId":"109","severity":1,"message":"110","line":2,"column":10,"nodeType":"106","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"112","line":2,"column":15,"nodeType":"106","messageId":"111","endLine":2,"endColumn":18},{"ruleId":"100","replacedBy":"137"},{"ruleId":"102","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-use-before-define","'testsPage' was used before it was defined.","Identifier","usedBeforeDefined","'reportPage' was used before it was defined.","no-unused-vars","'Row' is defined but never used.","unusedVar","'Col' is defined but never used.","'Modal' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'FaPlusCircle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setLoading' is assigned a value but never used.",["142"],"'show3' is assigned a value but never used.","'setShow3' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'useParams' is defined but never used.",["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},"Update the dependencies array to be: [params]",{"range":"146","text":"147"},{"range":"148","text":"147"},[497,499],"[params]",[530,532]]